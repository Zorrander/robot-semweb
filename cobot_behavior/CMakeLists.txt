cmake_minimum_required(VERSION 3.5)
project(cobot_behavior)

set (CMAKE_CXX_STANDARD 14)
if(NOT WIN32)
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -Wall -Wextra -fPIC")
endif()

IF (NOT DEFINED BUILD_VERSION)
 SET(BUILD_VERSION "not set")
ENDIF()


set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

ADD_DEFINITIONS(-DBUILD_VERSION="${BUILD_VERSION}")

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rmw_implementation REQUIRED)
find_package(std_msgs REQUIRED)
find_package(cobot_msgs REQUIRED)
find_package(Qt5Core REQUIRED)
find_package(Qt5Quick REQUIRED)

include_directories(
     ${rclcpp_INCLUDE_DIRS}
     ${std_msgs_INCLUDE_DIRS}
     ${cobot_msgs_INCLUDE_DIRS}
     ${Qt5Core_INCLUDE_DIRS}
     ${Qt5Quick_INCLUDE_DIRS}
 )

set(SOURCE_FILES
     "src/skill.cpp"
     "src/command.cpp"
     "src/control.cpp"
     "src/knowledge.cpp"
     "src/tasksmodel.cpp"
     "src/methodsmodel.cpp"
     "src/main.cpp"
     "src/taskslist.cpp"
 )

set(HEADER_FILES
  "include/cobot_behavior/command.hpp"
  "include/cobot_behavior/taskslist.hpp"
  "include/cobot_behavior/skill.hpp"
  "include/cobot_behavior/control.hpp"
  "include/cobot_behavior/knowledge.hpp"
  "include/cobot_behavior/methodsmodel.hpp"
  "include/cobot_behavior/tasksmodel.hpp"
)

add_executable(${PROJECT_NAME} ${SOURCE_FILES} "src/qml.qrc" ${HEADER_FILES})

#target_include_directories(${PROJECT_NAME} PUBLIC include)

ament_target_dependencies(${PROJECT_NAME}
 rclcpp
 std_msgs
 cobot_msgs
 rmw_implementation
 )

target_link_libraries(${PROJECT_NAME}
 Qt5::Core
 Qt5::Quick
 )

install(TARGETS ${PROJECT_NAME} DESTINATION bin)

ament_package()
