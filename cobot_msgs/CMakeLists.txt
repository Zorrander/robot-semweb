cmake_minimum_required(VERSION 3.5)
project(cobot_msgs)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(builtin_interfaces REQUIRED)
find_package(rosidl_default_generators REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_export_dependencies(rosidl_default_runtime)

set(msg_files
  "msg/Command.msg"
  "msg/Triple.msg"
  "msg/Method.msg"
  "msg/Task.msg"
)

set(srv_files
  "srv/Grasp.srv"
  "srv/MoveGripper.srv"
  "srv/NamedTarget.srv"
  "srv/ReachCartesianPose.srv"
  "srv/ReachJointPose.srv"
  "srv/ListTargets.srv"
  "srv/RobotSpeed.srv"

  "srv/Export.srv"
  "srv/Ask.srv"
  "srv/CreateInstance.srv"
  "srv/Describe.srv"
  "srv/GenerateInstanceName.srv"
  "srv/Select.srv"
  "srv/Update.srv"

  "srv/ReadTasks.srv"
  "srv/ReadMethods.srv"

  "srv/RobotName.srv"
)

rosidl_generate_interfaces(${PROJECT_NAME}
  ${msg_files}
  ${srv_files}
  DEPENDENCIES builtin_interfaces geometry_msgs
)

ament_package()
